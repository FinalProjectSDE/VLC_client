
package introsde.processcentric.soap;

import java.util.Date;
import java.util.List;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

import introsde.beemindergoals.soap.Goal;
import introsde.healthmanagement.soap.Person;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebService(name = "Process", targetNamespace = "http://soap.processcentric.introsde/")
@XmlSeeAlso({
    introsde.healthmanagement.soap.ObjectFactory.class,
    introsde.beemindergoals.soap.ObjectFactory.class,
    introsde.processcentric.soap.ObjectFactory.class
})
public interface Process {


    /**
     * 
     * @param height
     * @param weight
     * @param email
     * @param birthdate
     * @param lastname
     * @param firstname
     * @param bloodpressure
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "response", targetNamespace = "")
    @RequestWrapper(localName = "register", targetNamespace = "http://soap.processcentric.introsde/", className = "introsde.processcentric.soap.Register")
    @ResponseWrapper(localName = "registerResponse", targetNamespace = "http://soap.processcentric.introsde/", className = "introsde.processcentric.soap.RegisterResponse")
    @Action(input = "http://soap.processcentric.introsde/Process/registerRequest", output = "http://soap.processcentric.introsde/Process/registerResponse")
    public String register(
        @WebParam(name = "email", targetNamespace = "")
        String email,
        @WebParam(name = "firstname", targetNamespace = "")
        String firstname,
        @WebParam(name = "lastname", targetNamespace = "")
        String lastname,
        @WebParam(name = "birthdate", targetNamespace = "")
        String birthdate,
        @WebParam(name = "weight", targetNamespace = "")
        Long weight,
        @WebParam(name = "height", targetNamespace = "")
        Long height,
        @WebParam(name = "bloodpressure", targetNamespace = "")
        Long bloodpressure);

    /**
     * 
     * @param email
     * @param personId
     * @return
     *     returns java.util.List<introsde.beemindergoals.soap.Goal>
     */
    @WebMethod
    @WebResult(name = "goal", targetNamespace = "")
    @RequestWrapper(localName = "getGoals", targetNamespace = "http://soap.processcentric.introsde/", className = "introsde.processcentric.soap.GetGoals")
    @ResponseWrapper(localName = "getGoalsResponse", targetNamespace = "http://soap.processcentric.introsde/", className = "introsde.processcentric.soap.GetGoalsResponse")
    @Action(input = "http://soap.processcentric.introsde/Process/getGoalsRequest", output = "http://soap.processcentric.introsde/Process/getGoalsResponse")
    public List<Goal> getGoals(
        @WebParam(name = "personId", targetNamespace = "")
        Long personId,
        @WebParam(name = "email", targetNamespace = "")
        String email);

    /**
     * 
     * @param email
     * @param value
     * @param personId
     * @param type
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "response", targetNamespace = "")
    @RequestWrapper(localName = "addMeasure", targetNamespace = "http://soap.processcentric.introsde/", className = "introsde.processcentric.soap.AddMeasure")
    @ResponseWrapper(localName = "addMeasureResponse", targetNamespace = "http://soap.processcentric.introsde/", className = "introsde.processcentric.soap.AddMeasureResponse")
    @Action(input = "http://soap.processcentric.introsde/Process/addMeasureRequest", output = "http://soap.processcentric.introsde/Process/addMeasureResponse")
    public String addMeasure(
        @WebParam(name = "personId", targetNamespace = "")
        Long personId,
        @WebParam(name = "email", targetNamespace = "")
        String email,
        @WebParam(name = "type", targetNamespace = "")
        String type,
        @WebParam(name = "value", targetNamespace = "")
        Long value);

    /**
     * 
     * @param email
     * @param goalval
     * @param personId
     * @param type
     * @param goaldate
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "response", targetNamespace = "")
    @RequestWrapper(localName = "createGoal", targetNamespace = "http://soap.processcentric.introsde/", className = "introsde.processcentric.soap.CreateGoal")
    @ResponseWrapper(localName = "createGoalResponse", targetNamespace = "http://soap.processcentric.introsde/", className = "introsde.processcentric.soap.CreateGoalResponse")
    @Action(input = "http://soap.processcentric.introsde/Process/createGoalRequest", output = "http://soap.processcentric.introsde/Process/createGoalResponse")
    public String createGoal(
        @WebParam(name = "personId", targetNamespace = "")
        Long personId,
        @WebParam(name = "email", targetNamespace = "")
        String email,
        @WebParam(name = "type", targetNamespace = "")
        String type,
        @WebParam(name = "goalval", targetNamespace = "")
        Long goalval,
        @WebParam(name = "goaldate", targetNamespace = "")
        Long goaldate);

    /**
     * 
     * @param email
     * @param personId
     * @return
     *     returns introsde.healthmanagement.soap.Person
     */
    @WebMethod
    @WebResult(name = "person", targetNamespace = "")
    @RequestWrapper(localName = "readPerson", targetNamespace = "http://soap.processcentric.introsde/", className = "introsde.processcentric.soap.ReadPerson")
    @ResponseWrapper(localName = "readPersonResponse", targetNamespace = "http://soap.processcentric.introsde/", className = "introsde.processcentric.soap.ReadPersonResponse")
    @Action(input = "http://soap.processcentric.introsde/Process/readPersonRequest", output = "http://soap.processcentric.introsde/Process/readPersonResponse")
    public Person readPerson(
        @WebParam(name = "personId", targetNamespace = "")
        Long personId,
        @WebParam(name = "email", targetNamespace = "")
        String email);

}
